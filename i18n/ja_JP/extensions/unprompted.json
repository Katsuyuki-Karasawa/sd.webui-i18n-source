{
  "Unprompted": "Unprompted",
  "Enabled": "有効化",
  "Unprompted Seed": "未プロンプトのシード値",
  "Functions": "機能",
  "Select function:": "機能選択",
  "Options": "オプション",
  "Example Function": "関数例",
  "Enter a subject 🡢 subject": "件名を入力 🡢 subject",
  "Add fluff terms? 🡢 use_fluff": "綿毛条件を追加しますか? <unk> use_fluff",
  "Auto-include this in prompt": "プロンプトに自動的に含める",
  "Generate Shortcode": "ショートコードを作成",
  "img2img folder": "img2imgフォルダ",
  "Image folder 🡢 folder": "イメージフォルダー 🡢 folder",
  "String to include before the filename 🡢 pre": "ファイル名の前に含める文字列 🡢 pre",
  "String to include after the filename 🡢 post": "ファイル名の後に含める文字列 🡢 post",
  "txt2img2img": "txt2img2img",
  "Subject A 🡢 subject_a": "Subject A 🡢 subject_a",
  "Subject B 🡢 subject_b": "Subject B 🡢 subject_b",
  "Shortcodes": "ショートコード",
  "Select shortcode:": "ショートコードを選択:",
  "Content": "内容",
  "##": "##",
  "##: Houses a multiline comment that will not affect the final output.": "##: 最終的な出力に影響を与えない複数行のコメントを入れる。",
  "#": "#",
  "#: Houses a comment that does not affect your final prompt.": "#: 最終的なプロンプトに影響を与えない程度のコメントを入れる。",
  "Comment 🡢 str": "コメント 🡢 str",
  "after": "後",
  "after: Processes arbitrary text following the main output.": "after: メイン出力の後に任意のテキストを処理します。",
  "Order compared to other [after] blocks 🡢 int": "他の [after] ブロックと比較した命令 → int",
  "antonyms": "対義語",
  "antonyms: Replaces the content with one or more antonyms.": "反意語：コンテンツを1つ以上の反意語で置き換えます。",
  "array": "配列",
  "array: Manages a group or list of values.": "配列:グループやデータリストの管理",
  "Name of array variable 🡢 str": "配列変数の名前 → str",
  "Get or set index statements 🡢 verbatim": "インデックス文を取得または設定する → verbatim",
  "Custom delimiter string 🡢 _delimiter": "カスタム区切り文字 🡢 _delimiter",
  "Shuffle the array 🡢 _shuffle": "配列をシャッフル🡢 _shuffle",
  "Prepend value(s) to the array 🡢 _prepend": "配列に値を先頭に追加する 🡢 _prepend",
  "Append value(s) to the array 🡢 _append": "配列に値を末尾に追加する 🡢 _append",
  "Delete value(s) from the array by index 🡢 _del": "インデックスで配列から値を削除する 🡢 _del",
  "Removed specified value(s) from the array 🡢 _remove": "指定した値を配列から削除する 🡢 _remove",
  "Find the first index of the following value(s) 🡢 _find": "次の値の最初のインデックスを見つける <unk> _find",
  "article": "記事",
  "article: Returns the content with prefixed with a definite or indefinite article.": "article: 定冠詞または不定冠詞を前置してコンテンツを返します。",
  "autocorrect": "自動修正",
  "autocorrect: Attempts to correct the spelling of content.": "autocorrect: コンテンツのスペルを修正しようとします。",
  "case": "ケース",
  "case: Use within [switch] to run different logic blocks depending on the value of a var.": "例：var の値に応じて異なるロジックブロックを実行するには [switch] 内で使用します。",
  "Matching value 🡢 str": "一致する値 🡢 str",
  "casing": "ケーシング",
  "casing: Converts the casing of content.": "casing: コンテンツの大文字と小文字を変換します。",
  "Casing method 🡢 str": "ケーシング方法 🡢 str",
  "camelcase": "キャメルケース",
  "uppercase": "大文字",
  "lowercase": "小文字",
  "pascalcase": "パスカルケース",
  "snakecase": "スネークケース",
  "constcase": "コンストケース",
  "kebabcase": "ケバブケース",
  "upperkebabcase": "アッパーケバブケース",
  "separatorcase": "セパレータケース",
  "sentencecase": "文ケース",
  "titlecase": "タイトルケース",
  "alphanumcase": "英数字ケース",
  "chance": "チャンス",
  "chance: Returns the content if the number you passed is greater than or equal to a random number between 1 and 100.": "chance: 1から100のランダムな数値に大きさが等しいか、それ以上であれば、コンテンツを返します。",
  "Highest possible roll 🡢 _sides": "最高値の出目 <unk> _sides",
  "choose": "選択",
  "choose: Returns one of multiple options, delimited by newline or vertical pipe": "choose: 改行または縦棒で区切られた複数のオプションのうち1つを返します。",
  "Number of times to choose 🡢 int": "選択する回数 <unk> int",
  "String delimiter when returning more than one choice 🡢 _sep": "複数の選択肢を返す場合の文字列区切り文字 <unk> _sep",
  "Custom weight per option 🡢 _weighted": "オプションごとのカスタムウェイト（重み） <unk> _weighted",
  "Override random nature of shortcode with predetermined outcome 🡢 _case": "ショートコードのランダムな性質を事前に決定された結果で上書きする <unk> _case",
  "config": "設定",
  "config: Updates your settings with the content for the duration of a run.": "config: 実行期間中、設定をコンテンツで更新します。",
  "conjugate": "活用する",
  "conjugate: Converts the content verb into another conjugated form.": "conjugate: コンテンツの動詞を別の活用形に変換します。",
  "do": "do",
  "do: It's a do-until loop.": "do: do-untilループです。",
  "Until condition 🡢 until": "Until condition <unk> until",
  "elif": "elif",
  "elif: Shorthand 'else-if.'": "elif: 「else-if」の省略形です。",
  "else": "その他に",
  "else: Returns content if a previous conditional shortcode failed its check, otherwise discards content.": "else: 前の条件付きショートコードがチェックに失敗した場合、コンテンツを返します。そうでなければ、コンテンツを破棄します。",
  "eval": "評価",
  "eval: Parses the content using the simpleeval library, returning the result. Particularly useful for arithmetic.": "eval: simpleevalライブラリでコンテンツをパースし、結果を返します。算術演算に便利です。",
  "file": "file",
  "file: Processes the file content of 'path.'": "file: 「path」のファイルコンテンツを処理します。",
  "filelist": "filelist",
  "Filepath 🡢 str": "ファイルパス 🡢 str",
  "Expected encoding 🡢 _encoding": "Expected encoding <unk> _encoding",
  "filelist: Returns a list of files at a given location using glob.": "filelist: globを使って、指定された場所にあるファイルのリストを返します。",
  "Result delimiter 🡢 _delimiter": "結果の区切り文字 🡢 _delimiter",
  "for": "for",
  "for: It's a for loop.": "for: forループです。",
  "Set a variable 🡢 my_var": "変数の設定 🡢 my_var",
  "Conditional check 🡢 str": "状態のチェック 🡢 str",
  "Operation to perform at the end step 🡢 str": "最後のステップで実行する操作 🡢 str",
  "get": "get",
  "get: Returns the value of a variable.": "get: 変数の値を返します。",
  "Variable to get 🡢 str": "取得する変数 🡢 str",
  "Default value if the variable doesn't exist 🡢 _default": "変数が存在しない場合のデフォルト値 🡢 _default",
  "Separator string when returning multiple variables 🡢 _sep": "複数の変数を返すときの区切り文字列 🡢 _sep",
  "String to prepend to the variable 🡢 _before": "変数の先頭に追加する文字列 🡢 _before",
  "String to append to the variable 🡢 _after": "変数の後に追加する文字列 🡢 _after",
  "hypernyms": "上位概念",
  "hypernyms: Replaces the content with one or more hypernyms.": "hypernyms: コンテンツを1つ以上の上位語で置き換えます。",
  "hyponyms": "下位概念",
  "hyponyms: Replaces the content with one or more synonyms.": "下位概念：コンテンツを1つ以上の類義語に置き換える",
  "if": "もし",
  "if: Checks whether a variable is equal to a given value.": "if: 変数が指定された値と等しいかどうかをチェックします。",
  "Conditional statement 🡢 my_var": "条件付きステートメント 🡢 _var",
  "Evaluation method 🡢 _is": "評価方法 🡢 _is",
  "Invert evaluation such that a true statement will return false 🡢 _not": "true の文が false を返すように評価を反転させる 🡢 _not",
  "Return true if any one of multiple conditions are true 🡢 _any": "いずれかの条件が true の場合に true を返す 🡢 _any",
  "info": "info",
  "info: Returns various types of metadata about the content.": "info: コンテンツに関する様々な種類のメタデータを返します。",
  "Return the character count 🡢 character_count": "文字数を返す 🡢 character_count",
  "Return the word count 🡢 word_count": "単語数を返す 🡢 word_count",
  "Return the sentence count 🡢 sentence_count": "文の数を返す 🡢 sentence_count",
  "Return the filename 🡢 filename": "ファイル名を返す 🡢 filename",
  "Return the CLIP token count (prompt complexity) 🡢 clip_count": "CLIPトークン数（プロンプトの複雑さ）を返す 🡢 clip_count",
  "Return the count of a custom substring 🡢 string_count": "カスタム部分文字列のカウントを返す 🡢 string_count",
  "length": "長さ",
  "length: Returns the number of items in a delimited string.": "length: 区切られた文字列の項目数を返す。",
  "The string to evaluate 🡢 str": "評価する文字列 🡢 str",
  "Delimiter to check for 🡢 _delimiter": "チェックする区切り文字 🡢 _delimiter",
  "Maximum number to be returned 🡢 _max": "返される最大数 🡢 _max",
  "max": "最大値",
  "max: Returns the maximum value among the given arguments.": "max: 与えられた引数の中の最大値を返します。",
  "min": "最小値",
  "min: Returns the minimum value among the given arguments.": "min: 与えられた引数の中の最小値を返します。",
  "override": "上書き",
  "override: Force variable(s) to hold a pre-determined value the rest of the run.": "override: 変数にあらかじめ決められた値を強制的に設定して、実行を続けます。",
  "Arguments in variable=value format 🡢 verbatim": "変数 = 値フォーマットの引数 🡢 verbatim",
  "pluralize": "複数形",
  "pluralize: Converts the content into plural form.": "pluralize: コンテンツを複数形に変換します。",
  "random: Returns a random number between 0 and a given max value (inclusive)": "random: 0から指定された最大値（含む）の範囲でランダムな数値を返します。",
  "Minimum number 🡢 _min": "最小値 🡢 _min",
  "Maximum number 🡢 _max": "最大値 🡢 _max",
  "Evaluate as floats instead of integers 🡢 _float": "整数ではなく浮動小数点数として評価します。 🡢 _float",
  "repeat": "繰り返し",
  "repeat: Returns the content an arbitrary number of times.": "repeat: コンテンツを任意の回数繰り返し返します。",
  "Number of times to repeat the content 🡢 int": "コンテンツを繰り返す回数 🡢 int",
  "Delimiter string between outputs 🡢 _sep": "出力間の区切り文字列 🡢 _sep",
  "replace": "置換",
  "replace: Updates a string using the arguments for replacement logic.": "replace: 置換ロジックの引数を使用して文字列を更新します。",
  "Arbitrary replacement arguments in old=new format 🡢 verbatim": "old=new形式の任意の置換引数 🡢 verbatim",
  "Original value, with advanced expression support 🡢 _from": "高度な式サポートを持つ元の値 🡢 _from",
  "New value, with advanced expression support 🡢 _to": "高度な式サポートを持つ新しい値 🡢 _to",
  "Maximum number of times the replacement may occur 🡢 _count": "置換を行う最大回数 🡢 _count",
  "set": "set",
  "set: Stores a value into a given variable.": "set: 指定された変数に値を格納します。",
  "Variable name 🡢 verbatim": "変数名 🡢 verbatim",
  "Only set this variable if it doesn't already exist 🡢 _new": "この変数が存在しない場合にのみ設定する 🡢 _new",
  "Array of valid values (used in conjunction with _new) 🡢 _choices": "有効な値の配列 (_newと組み合わせて使用) 🡢 _choices",
  "Append the content to the variable's current value 🡢 _append": "変数の現在の値にコンテンツを追加🡢 _append",
  "Prepend the content to the variable's current value 🡢 _prepend": "変数の現在値の先頭にコンテンツを追加する 🡢 _prepend",
  "Print the variable's value 🡢 _out": "変数の値を表示🡢 _out",
  "sets": "sets",
  "sets: The atomic version of [set] that lets you set multiple variables at once.": "sets: 1度に複数の変数を設定できる[set]のアトミック版です。",
  "Arbitrary arguments in variable=value format 🡢 verbatim": "変数=値の形式の任意の引数 🡢 verbatim",
  "singularize": "singularize",
  "singularize: Converts the content into singular form.": "singularize: コンテンツを単数形に変換します。",
  "substring: Slices up the content.": "部分文字列: コンテンツをスライスします。",
  "Beginning index of the substring 🡢 start": "部分文字列の開始インデックス 🡢 start",
  "Ending index of the substring 🡢 end": "部分文字列の末尾インデックス 🡢 end",
  "Step size 🡢 step": "ステップサイズ 🡢 step",
  "Unit type 🡢 unit": "ユニット タイプ → ユニット",
  "characters": "文字数",
  "words": "単語",
  "switch": "切り替え",
  "switch: Use in conjunction with [case] to run different logic blocks depending on the value of a var.": "切り替え: varの値に応じて異なるロジックブロックを実行するには、 [case] と組み合わせて使用します。",
  "Variable to test against 🡢 verbatim": "テスト対象の変数 🡢 verbatim",
  "synonyms": "類義語",
  "synonyms: Replaces the content with one or more synonyms.": "類義語: コンテンツを 1 つ以上の類義語に置き換えます。",
  "template: This is used by the Wizard to instantiate a custom template UI. It is bypassed by the normal shortcode parser.": "テンプレート: これは、ウィザードによってカスタムテンプレートUIをインスタンス化するために使用されます。通常のショートコードパーサによってバイパスされます。",
  "unset": "解除",
  "unset: Removes one or more variables from memory. Generally not needed.": "解除: メモリから1つ以上の変数を削除します。一般的には不要です。",
  "Arbitrary variable names to free from memory 🡢 verbatim": "任意の変数名をメモリから解放する →verbatim",
  "while": "～する間",
  "while: Loops content until the condition returns false.": "whileの条件が false を返すまで内容をループします。",
  "Arbitrary conditional statement(s) to test against 🡢 verbatim": "任意の条件文を用いて元の文に対してテストする",
  "Invert evaluation such that a false condition will end the loop 🡢 _not": "False 条件がループを終了するように評価を反転する 🡢 _not",
  "controlnet": "controlnet",
  "controlnet: A neural network structure to control diffusion models by adding extra conditions. Check manual for setup info.": "controlnet: 追加の条件を追加して拡散モデルを制御するニューラルネットワーク構造です。",
  "Model name (do not include extension) 🡢 model": "モデル名 (拡張子を含まない) → モデル",
  "Resolution of the detection map 🡢 detect_resolution": "検出マップの解像度 →検出解像度",
  "Use low VRAM mode? 🡢 save_memory": "低VRAMモードを使用しますか？→ メモリを節約",
  "DDIM ETA 🡢 eta": "DDIM ETA 🡢 eta",
  "Value Threshold 🡢 value_threhsold": "しきい値 → しきい値",
  "Distance Threshold 🡢 distance_threhsold": "距離のしきい値 🡢 distance_threhsold",
  "Background Threshold 🡢 bg_threhsold": "背景しきい値 🡢 bg_threhsold",
  "Canny low threshold 🡢 low_threshold": "Cannyの低閾値 🡢 low_threshold",
  "Canny high threshold 🡢 high_threshold": "Cannyの高いしきい値🡢 high_threshold",
  "Render hands with Openpose? 🡢 openpose_hands": "Openposeでハンドをレンダリングしますか？🡢 openpose_hands",
  "enable_multi_images": "enable_multi_images",
  "enable_multi_images: Allows to use multiple init_images or multiple masks": "複数画像を使用する: 複数の初期化画像や複数のマスクを使用できます",
  "file2mask": "file2マスク",
  "file2mask: Modify or replace your img2img mask with arbitrary files.": "file2mask: img2imgマスクを任意のファイルで修正または置き換えます。",
  "Path to image file 🡢 str": "画像ファイルへのパス <unk> str",
  "Mask blend mode 🡢 mode": "マスクブレンドモード → モード",
  "add": "追加",
  "subtract": "減算",
  "discard": "破棄する",
  "Show mask in output 🡢 show": "出力マスクを表示 → 表示",
  "img2img": "画像から画像に",
  "img2img: Runs an img2img task inside of an [after] block.": "img2img: [after] ブロック内で img2img タスクを実行します。",
  "img2img_autosize": "img2img 自動サイズ",
  "img2img_autosize: Automatically adjusts the width and height parameters in img2img mode based on the proportions of the input image.": "img2img_autosize: 入力画像の比率に基づいて、img2imgモードで幅と高さのパラメータを自動的に調整します。",
  "Minimum pixels of at least one dimension 🡢 target": "最低でも一つの次元の最小ピクセル数 <unk> ターゲット",
  "Only run this shortcode if using full resolution inpainting mode 🡢 only_full_res": "完全解像度修復モードを使用する場合にのみ、このショートコードを実行する <unk> only_full_res",
  "img2pez": "img2pez",
  "img2pez: Optimize a hard prompt using the PEZ algorithm and CLIP encoders, AKA Hard Prompts Made Easy.": "img2pez: PEZアルゴリズムとCLIPエンコーダーを使用して、ハードプロンプトを最適化することで、ハードプロンプトの作成が簡単になる、とも呼ばれる。",
  "Image path 🡢 image_path": "画像パス →　画像 パス",
  "Prompt length 🡢 prompt_length": "プロンプトの長さ →プロンプト長",
  "Iterations 🡢 iterations": "イテレーション数 🡢 iterations",
  "Learning rate 🡢 learning_rate": "学習率 → 学習率",
  "Weight decay 🡢 weight_decay": "Weight decay 🡢 weight_decay",
  "Prompt bs (well, that's what they call it) 🡢 prompt_bs": "Prompt bs (一般にそう呼ばれている) 🡢 prompt_bs",
  "CLIP model 🡢 clip_model": "CLIP model 🡢 clip_model",
  "ViT-L-14": "ViT-L-14",
  "ViT-H-14": "ViT-H-14",
  "CLIP pretrain 🡢 clip_pretrain": "CLIP pretrain 🡢 clip_pretrain",
  "openai": "openai",
  "laion2b_s32b_b79k": "laion2b_s32b_b79k",
  "Try freeing CLIP model from memory? 🡢 free_memory": "メモリからCLIPモデルを解放してみて下さい🡢 free_memory",
  "init_image": "init_image",
  "init_image: Loads an image from the given path and sets it as the initial image for use with img2img.": "init_image: 与えられたパスから画像を読み込み、img2imgで使用するための初期画像として設定する。",
  "Image path": "画像のパス",
  "instance2mask": "instance2mask",
  "instance2mask: Creates an image mask from instances of types specified by the content for use with inpainting.": "instance2mask: inpaintingで使用するために、コンテンツで指定されたタイプのインスタンスからイメージマスクを作成します。",
  "refine": "美肌モード",
  "Run inpaint per instance found 🡢 per_instance": "発見されたインスタンスごとに inpaint を実行する → インスタンス毎",
  "Precision of selected area 🡢 mask_precision": "選択した領域の精度 <unk> mask_precision",
  "Padding radius in pixels 🡢 padding": "ピクセル単位のパディング半径 <unk> padding",
  "Smoothing radius in pixels 🡢 smoothing": "半径をピクセルで平滑化→ 平滑化",
  "Precision of instance selection 🡢 instance_precision": "インスタンス選択の精度 <unk> instance_precision",
  "Number of instance to select 🡢 select": "選択するインスタンス数 🡢 select",
  "Instance selection mode 🡢 select_mode": "インスタンス選択モード → 選択モード",
  "overlap": "重ね合わせ",
  "relative overlap": "相対的な重ね合わせ",
  "greatest area": "最大のエリア",
  "invert_mask": "マスク反転",
  "invert_mask: Inverts the mask (great in combination with multiple txt2masks)": "invert_mask: マスク反転 (複数の txt2mask と組み合わせると最適)",
  "pix2pix_zero": "pix2pix_zero",
  "pix2pix_zero: A diffusion-based image-to-image approach that allows users to specify the edit direction on-the-fly.": "pix2pix_zero: ユーザーがオンザフライで編集方向を指定できる、拡散ベースの画像から画像へのアプローチ。",
  "txt2mask": "txt2mask",
  "Use legacy weights 🡢 legacy_weights": "過去の重み付けを使用する 🡢 legacy_weights",
  "Precision of selected area 🡢 precision": "選択した領域の精度 🡢 precision",
  "Negative mask prompt 🡢 negative_mask": "ネガティブマスクプロンプト 🡢 negative_mask",
  "Negative mask precision of selected area 🡢 neg_precision": "選択範囲のネガティブマスク精度 🡢 neg_precision",
  "Negative mask padding radius in pixels 🡢 neg_padding": "ピクセル単位のネガティブマスクパディング半径 🡢 neg_padding",
  "Negative mask smoothing radius in pixels 🡢 neg_smoothing": "ピクセル単位のネガティブマスク平滑化半径 🡢 neg_smoothing",
  "Mask color, enables Inpaint Sketch mode 🡢 sketch_color": "マスクの色、inpaintスケッチモードを有効にする 🡢 sketch_color",
  "Mask alpha, must be used in conjunction with mask color 🡢 sketch_alpha": "マスクアルファ。マスクカラーと併用する必要があります。 🡢 sketch_alpha",
  "Save the mask size to the following variable 🡢 size_var": "マスクのサイズを以下の変数に保存する <unk> size_var",
  "zoom_enhance": "zoom_enhance",
  "zoom_enhance: Upscales a selected portion of the image. ENHANCE!": "zoom_enhance: 画像の選択した部分をアップスケールします。ENHANCE!",
  "Final image not showing up? Try using this workaround 🡢 use_workaround": "最終画像が表示されませんか？この回避策を使用してみてください 🡢 use_workaround",
  "Mask to find 🡢 mask": "検索するマスク 🡢 mask",
  "Replacement 🡢 replacement": "置換 → 置換",
  "Negative replacement 🡢 negative_replacement": "ネガティブ置換 🡢 negative_replacement",
  "Mask sorting method 🡢 mask_sort_method": "マスクのソート方法 🡢 mask_sort_method",
  "left-to-right": "左から右へ",
  "right-to-left": "右から左へ",
  "top-to-bottom": "上から下へ",
  "bottom-to-top": "下から上へ",
  "big-to-small": "大きいものから小さいもの",
  "small-to-big": "小さいものから大きいもの",
  "unsorted": "並べ替えない",
  "Blur edges size 🡢 blur_size": "エッジのぼかしサイズ 🡢 blur_size",
  "Minimum CFG scale 🡢 cfg_scale_min": "最小CFGスケール 🡢 cfg_scale_min",
  "Maximum denoising strength 🡢 denoising_max": "最大ノイズ除去強度→ ノイズ除去 最大",
  "Maximum mask size (if a bigger mask is found, it will bypass the shortcode) 🡢 mask_size_max": "最大マスクサイズ（より大きなマスクが見つかった場合、ショートコードはバイパスされます）🡢 mask_size_max",
  "Force denoising strength to this value 🡢 denoising_strength": "ノイズ除去強度をこの値に強制する 🡢 denoising_strength",
  "Force CFG scale to this value 🡢 cfg_scale": "CFGスケールをこの値に強制する 🡢 cfg_scale",
  "Mask minimum number of pixels 🡢 min_area": "マスクの最小ピクセル数 🡢 min_area",
  "Contour padding in pixels 🡢 contour_padding": "輪郭のパディング（ピクセル単位） 🡢 contour_padding",
  "Upscale width 🡢 upscale_width": "アップスケールの幅 🡢 upscale_width",
  "Upscale height 🡢 upscale_height": "アップスケールの高さ🡢 upscale_height",
  "Include original image in output window 🡢 include_original": "出力ウィンドウにオリジナル画像を含める 🡢 include_original",
  "Save debug images to WebUI folder 🡢 save": "デバッグ画像をWebUIフォルダに保存 🡢 save",
  "Test prompt": "テスト プロンプト:",
  "Process Text": "プロセス テキスト",
  "Re-process extra networks after Unprompted is finished (WIP - this is not yet functional!)": "アンプロンプトが終了した後、追加のネットワークを再処理する（WIP-まだ機能していません！）",
  "unprompted": "プロンプトされていない",
  "https://github.com/ThereforeGames/unprompted.git": "https://github.com/ThereforeGames/unprompted.git"
}
